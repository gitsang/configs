#!/bin/bash

# =============== Environment Variable =============== #

# locales
export LANGUAGE=C.UTF-8
export LANG=C.UTF-8
# export LC_ALL=C.UTF-8
# export LC_CTYPE=C.UTF-8
# export LC_MESSAGES=C.UTF-8
# export LESSCHARSET=utf-8
export TZ=Asia/Shanghai

# display
REMOTE_IP="$(who am i | sed 's/.*(\(.*\)).*/\1/g')"
export REMOTE_IP=${REMOTE_IP}
export DISPLAY="${REMOTE_IP}:0.0"

# path
export PATH=$PATH:/sbin/:/bin:/usr/sbin:/usr/bin:~/.local/bin:/usr/local/bin:.
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/:./lib:./libs:.

# java
export JAVA_HOME='/usr/lib/jvm/jdk-22.0.1'
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:/usr/local/lib
export M2_HOME=/usr/share/maven
export MAVEN_HOME=/usr/share/maven
export PATH=$PATH:${JAVA_HOME}/bin:${M2_HOME}/bin

# golang
#export GOROOT=/usr/local/go
export GOPATH=~/.go
export GOBIN=$GOPATH/bin
export GOPROXY=https://goproxy.cn
export GO111MODULE=on
export CGO_ENABLED=0
export PATH=$PATH:$GOBIN:$GOROOT/bin
export GONOPROXY='*.c8g.top'
export GONOSUMDB='*.c8g.top'
export GOPRIVATE='gitlab.home.c8g.top'
#export GOCACHE=off

# rust
# shellcheck disable=SC1090,SC1091
source "$HOME/.cargo/env"

# node
# node_version=v18.18.2
# node_distro=linux-x64
# export PATH=/usr/local/lib/nodejs/node-$node_version-$node_distro/bin:$PATH
export PATH=$PATH:/usr/local/lib/nodejs/bin

# libreoffice
export LibreOffice_PATH=/opt/libreoffice7.1/program
export PATH=$PATH:$LibreOffice_PATH

# term
#export TERM=xterm
export TERM=xterm-256color
#export TERM=screen-256color-bce
export HISTSIZE=1000000

# podman
export BUILDAH_FORMAT=docker

# =============== Common specific aliases and functions =============== #

# fuck
fuck() {
  if [ $# -eq 1 ] && [ "$1" == "-" ]; then
    su - root
  elif [ $# -gt 0 ]; then
    # shellcheck disable=SC2068
    sudo $@
  else
    # shellcheck disable=SC2046
    sudo $(fc -ln -1)
  fi
}

# list
alias l='ls --color --group-directories-first'
alias ll='ls -la --color --group-directories-first'
alias lh='ls -lh --color --group-directories-first'
alias la='ls -la --color --group-directories-first'

# file system
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# change dir
alias ..='cd ../'

alias ..2='cd ../../'
alias ...='cd ../../'

alias ..3='cd ../../../'
alias ....='cd ../../../'

alias ..4='cd ../../../../'
alias .....='cd ../../../../'

alias ..5='cd ../../../../../'
alias ......='cd ../../../../../'

alias ..6='cd ../../../../../../'
alias .......='cd ../../../../../../'

# tail
alias tailf='tail -f'

# nvim diff
dirdiff() {
  DIR1=$(printf '%q' "$1")
  shift
  DIR2=$(printf '%q' "$1")
  shift
  # shellcheck disable=SC2068
  nvim $@ -c "DirDiff $DIR1 $DIR2"
}

# docker
alias d='docker'
alias dps='docker ps --format "table {{.Image}}\t{{.Networks}}\t{{.Status}}\t{{.RunningFor}}\t{{.State}}\t{{.Names}}"'
alias rekcod='docker run --rm -v /var/run/docker.sock:/var/run/docker.sock nexdrew/rekcod'
dpl() {
  mirror=dockerhub.icu
  docker pull "${mirror}/${1}"
  docker tag "${mirror}/${1}" "${1}"
  docker rmi "${mirror}/${1}"
}
dive() {
  docker run --rm -it \
    -v /var/run/docker.sock:/var/run/docker.sock \
    wagoodman/dive:latest \
    "$@"
}

# podman
alias p='podman'
alias pps='podman ps --format "table {{.Image}}\t{{.Networks}}\t{{.Status}}\t{{.RunningFor}}\t{{.State}}\t{{.Names}}"'

# vim
alias nv='nvim'

# cache
dropcaches() {
  free -h | grep Mem
  sync
  echo 1 >/proc/sys/vm/drop_caches
  sync
  echo 2 >/proc/sys/vm/drop_caches
  sync
  echo 3 >/proc/sys/vm/drop_caches
  free -h | grep Mem
}

# jobs
alias j='jobs'
kj() {
  kill -9 "%${1}"
}

# tmpfile
tmp() {
  TMPFILE_ROOT="${HOME}/.tmp"
  TMPFILE_DATE=$(date +%s)
  TMPFILE_DRIVER=nvim
  TMPFILE_TYPE=$1
  case ${TMPFILE_TYPE} in
  dir)
    TMPDIR_PATH=${TMPFILE_ROOT}/${TMPFILE_DATE}
    mkdir -p "${TMPDIR_PATH}"
    echo -n "Change Dir? (Default:Y) [Y/n]"
    read -r input
    case $input in
    [yY][eE][sS] | [yY] | "")
      cd "${TMPDIR_PATH}" || exit
      ;;
    esac
    ;;
  "")
    SELECTED_FILE=$(find ~/.tmp -maxdepth 1 -exec basename {} \; | sort -r | fzf --height 40% --layout reverse)
    if [ -n "$SELECTED_FILE" ]; then
      ${TMPFILE_DRIVER} "${TMPFILE_ROOT}/${SELECTED_FILE}"
    fi
    ;;
  *)
    TMPFILE=${TMPFILE_ROOT}/${TMPFILE_DATE}.${TMPFILE_TYPE}
    ${TMPFILE_DRIVER} "${TMPFILE}"
    ;;
  esac
}

# make
mk() {
  relate_path=$(realpath "$(git rev-parse --show-toplevel)" --relative-to=.)
  cd "${relate_path}" || exit 1
  make "${@}"
  cd - || exit 1
}
